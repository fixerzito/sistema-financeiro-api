// <auto-generated />
using System;
using BudgetBuddy.Infra.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BudgetBuddy.Infra.Data.Migrations
{
    [DbContext(typeof(BudgetBuddyContext))]
    [Migration("20241120233725_PopulandoBD2")]
    partial class PopulandoBD2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BudgetBuddy.Domain.Entities.BankAccounts.CategoriaContaBancaria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CriadoPor")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataHoraCriacao")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("data_hora_criacao")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<bool>("RegistroAtivo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIT")
                        .HasDefaultValue(true)
                        .HasColumnName("registro_ativo");

                    b.HasKey("Id");

                    b.ToTable("categoria_contas_bancarias", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 100,
                            DataHoraCriacao = new DateTime(2024, 11, 20, 20, 37, 24, 679, DateTimeKind.Local).AddTicks(5582),
                            Nome = "Conta Corrente",
                            RegistroAtivo = true
                        },
                        new
                        {
                            Id = 101,
                            DataHoraCriacao = new DateTime(2024, 11, 20, 20, 37, 24, 679, DateTimeKind.Local).AddTicks(5598),
                            Nome = "Conta Poupança",
                            RegistroAtivo = true
                        },
                        new
                        {
                            Id = 102,
                            DataHoraCriacao = new DateTime(2024, 11, 20, 20, 37, 24, 679, DateTimeKind.Local).AddTicks(5600),
                            Nome = "Conta Salário",
                            RegistroAtivo = true
                        },
                        new
                        {
                            Id = 103,
                            DataHoraCriacao = new DateTime(2024, 11, 20, 20, 37, 24, 679, DateTimeKind.Local).AddTicks(5603),
                            Nome = "Conta de Investimentos",
                            RegistroAtivo = true
                        },
                        new
                        {
                            Id = 104,
                            DataHoraCriacao = new DateTime(2024, 11, 20, 20, 37, 24, 679, DateTimeKind.Local).AddTicks(5606),
                            Nome = "Conta de Reserva",
                            RegistroAtivo = true
                        },
                        new
                        {
                            Id = 105,
                            DataHoraCriacao = new DateTime(2024, 11, 20, 20, 37, 24, 679, DateTimeKind.Local).AddTicks(5611),
                            Nome = "Conta Conjunta",
                            RegistroAtivo = true
                        },
                        new
                        {
                            Id = 106,
                            DataHoraCriacao = new DateTime(2024, 11, 20, 20, 37, 24, 679, DateTimeKind.Local).AddTicks(5612),
                            Nome = "Conta Jurídica",
                            RegistroAtivo = true
                        },
                        new
                        {
                            Id = 107,
                            DataHoraCriacao = new DateTime(2024, 11, 20, 20, 37, 24, 679, DateTimeKind.Local).AddTicks(5614),
                            Nome = "Conta Digital",
                            RegistroAtivo = true
                        },
                        new
                        {
                            Id = 108,
                            DataHoraCriacao = new DateTime(2024, 11, 20, 20, 37, 24, 679, DateTimeKind.Local).AddTicks(5617),
                            Nome = "Conta de Depósito",
                            RegistroAtivo = true
                        },
                        new
                        {
                            Id = 109,
                            DataHoraCriacao = new DateTime(2024, 11, 20, 20, 37, 24, 679, DateTimeKind.Local).AddTicks(5619),
                            Nome = "Conta de Pagamento",
                            RegistroAtivo = true
                        },
                        new
                        {
                            Id = 110,
                            DataHoraCriacao = new DateTime(2024, 11, 20, 20, 37, 24, 679, DateTimeKind.Local).AddTicks(5621),
                            Nome = "Conta de Investimento Imobiliário",
                            RegistroAtivo = true
                        },
                        new
                        {
                            Id = 111,
                            DataHoraCriacao = new DateTime(2024, 11, 20, 20, 37, 24, 679, DateTimeKind.Local).AddTicks(5623),
                            Nome = "Conta de Previdência",
                            RegistroAtivo = true
                        },
                        new
                        {
                            Id = 112,
                            DataHoraCriacao = new DateTime(2024, 11, 20, 20, 37, 24, 679, DateTimeKind.Local).AddTicks(5626),
                            Nome = "Conta de Fomento",
                            RegistroAtivo = true
                        },
                        new
                        {
                            Id = 113,
                            DataHoraCriacao = new DateTime(2024, 11, 20, 20, 37, 24, 679, DateTimeKind.Local).AddTicks(5628),
                            Nome = "Conta de Pagamento Eletrônico",
                            RegistroAtivo = true
                        },
                        new
                        {
                            Id = 114,
                            DataHoraCriacao = new DateTime(2024, 11, 20, 20, 37, 24, 679, DateTimeKind.Local).AddTicks(5631),
                            Nome = "Conta Universitária",
                            RegistroAtivo = true
                        },
                        new
                        {
                            Id = 115,
                            DataHoraCriacao = new DateTime(2024, 11, 20, 20, 37, 24, 679, DateTimeKind.Local).AddTicks(5632),
                            Nome = "Conta Infantil",
                            RegistroAtivo = true
                        },
                        new
                        {
                            Id = 116,
                            DataHoraCriacao = new DateTime(2024, 11, 20, 20, 37, 24, 679, DateTimeKind.Local).AddTicks(5636),
                            Nome = "Conta de Crédito",
                            RegistroAtivo = true
                        },
                        new
                        {
                            Id = 117,
                            DataHoraCriacao = new DateTime(2024, 11, 20, 20, 37, 24, 679, DateTimeKind.Local).AddTicks(5637),
                            Nome = "Conta de Empréstimo",
                            RegistroAtivo = true
                        },
                        new
                        {
                            Id = 118,
                            DataHoraCriacao = new DateTime(2024, 11, 20, 20, 37, 24, 679, DateTimeKind.Local).AddTicks(5639),
                            Nome = "Conta de Transferência",
                            RegistroAtivo = true
                        },
                        new
                        {
                            Id = 119,
                            DataHoraCriacao = new DateTime(2024, 11, 20, 20, 37, 24, 679, DateTimeKind.Local).AddTicks(5641),
                            Nome = "Conta com Investimento Automático",
                            RegistroAtivo = true
                        });
                });

            modelBuilder.Entity("BudgetBuddy.Domain.Entities.BankAccounts.ContaBancaria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CriadoPor")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataHoraCriacao")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("data_hora_criacao")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("IdCategoria")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("RegistroAtivo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIT")
                        .HasDefaultValue(true)
                        .HasColumnName("registro_ativo");

                    b.Property<decimal>("Saldo")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("IdCategoria");

                    b.ToTable("contas_bancarias", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 150,
                            DataHoraCriacao = new DateTime(2024, 11, 20, 20, 37, 24, 680, DateTimeKind.Local).AddTicks(6160),
                            Icon = "pi pi-wallet",
                            IdCategoria = 100,
                            Nome = "Conta Corrente Banco A",
                            RegistroAtivo = true,
                            Saldo = 5000.00m
                        },
                        new
                        {
                            Id = 151,
                            DataHoraCriacao = new DateTime(2024, 11, 20, 20, 37, 24, 680, DateTimeKind.Local).AddTicks(6174),
                            Icon = "pi pi-money-bill",
                            IdCategoria = 101,
                            Nome = "Conta Poupança Banco B",
                            RegistroAtivo = true,
                            Saldo = 2000.00m
                        },
                        new
                        {
                            Id = 152,
                            DataHoraCriacao = new DateTime(2024, 11, 20, 20, 37, 24, 680, DateTimeKind.Local).AddTicks(6176),
                            Icon = "pi pi-chart-line",
                            IdCategoria = 102,
                            Nome = "Conta Salário Banco C",
                            RegistroAtivo = true,
                            Saldo = 3000.00m
                        },
                        new
                        {
                            Id = 153,
                            DataHoraCriacao = new DateTime(2024, 11, 20, 20, 37, 24, 680, DateTimeKind.Local).AddTicks(6179),
                            Icon = "pi pi-briefcase",
                            IdCategoria = 103,
                            Nome = "Conta de Investimentos Banco D",
                            RegistroAtivo = true,
                            Saldo = 15000.00m
                        },
                        new
                        {
                            Id = 154,
                            DataHoraCriacao = new DateTime(2024, 11, 20, 20, 37, 24, 680, DateTimeKind.Local).AddTicks(6182),
                            Icon = "pi pi-check",
                            IdCategoria = 104,
                            Nome = "Conta de Reserva Banco E",
                            RegistroAtivo = true,
                            Saldo = 8000.00m
                        },
                        new
                        {
                            Id = 155,
                            DataHoraCriacao = new DateTime(2024, 11, 20, 20, 37, 24, 680, DateTimeKind.Local).AddTicks(6186),
                            Icon = "pi pi-times",
                            IdCategoria = 105,
                            Nome = "Conta Conjunta Banco F",
                            RegistroAtivo = true,
                            Saldo = 12000.00m
                        },
                        new
                        {
                            Id = 156,
                            DataHoraCriacao = new DateTime(2024, 11, 20, 20, 37, 24, 680, DateTimeKind.Local).AddTicks(6188),
                            Icon = "pi pi-user",
                            IdCategoria = 106,
                            Nome = "Conta Jurídica Banco G",
                            RegistroAtivo = true,
                            Saldo = 25000.00m
                        },
                        new
                        {
                            Id = 157,
                            DataHoraCriacao = new DateTime(2024, 11, 20, 20, 37, 24, 680, DateTimeKind.Local).AddTicks(6191),
                            Icon = "pi pi-home",
                            IdCategoria = 107,
                            Nome = "Conta Digital Banco H",
                            RegistroAtivo = true,
                            Saldo = 4000.00m
                        },
                        new
                        {
                            Id = 158,
                            DataHoraCriacao = new DateTime(2024, 11, 20, 20, 37, 24, 680, DateTimeKind.Local).AddTicks(6195),
                            Icon = "pi pi-credit-card",
                            IdCategoria = 108,
                            Nome = "Conta de Depósito Banco I",
                            RegistroAtivo = true,
                            Saldo = 7000.00m
                        },
                        new
                        {
                            Id = 159,
                            DataHoraCriacao = new DateTime(2024, 11, 20, 20, 37, 24, 680, DateTimeKind.Local).AddTicks(6198),
                            Icon = "pi pi-wallet",
                            IdCategoria = 109,
                            Nome = "Conta de Pagamento Banco J",
                            RegistroAtivo = true,
                            Saldo = 6000.00m
                        });
                });

            modelBuilder.Entity("BudgetBuddy.Domain.Entities.CreditCards.CartaoCredito", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CriadoPor")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataHoraCriacao")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("data_hora_criacao")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("DiaFechamento")
                        .HasColumnType("int");

                    b.Property<int>("DiaVencimento")
                        .HasColumnType("int");

                    b.Property<string>("DigBandeira")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("IdContaVinculada")
                        .HasColumnType("int");

                    b.Property<decimal>("Limite")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("RegistroAtivo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIT")
                        .HasDefaultValue(true)
                        .HasColumnName("registro_ativo");

                    b.Property<decimal>("Saldo")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("IdContaVinculada");

                    b.ToTable("cartoes_credito", (string)null);
                });

            modelBuilder.Entity("BudgetBuddy.Domain.Entities.Transactions.CategoriaTransacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CriadoPor")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataHoraCriacao")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("data_hora_criacao")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<bool>("RegistroAtivo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIT")
                        .HasDefaultValue(true)
                        .HasColumnName("registro_ativo");

                    b.HasKey("Id");

                    b.ToTable("categoria_transacoes", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 100,
                            DataHoraCriacao = new DateTime(2024, 11, 20, 20, 37, 24, 674, DateTimeKind.Local).AddTicks(6097),
                            Nome = "Transporte",
                            RegistroAtivo = true
                        },
                        new
                        {
                            Id = 101,
                            DataHoraCriacao = new DateTime(2024, 11, 20, 20, 37, 24, 674, DateTimeKind.Local).AddTicks(6112),
                            Nome = "Saúde",
                            RegistroAtivo = true
                        },
                        new
                        {
                            Id = 102,
                            DataHoraCriacao = new DateTime(2024, 11, 20, 20, 37, 24, 674, DateTimeKind.Local).AddTicks(6114),
                            Nome = "Laser",
                            RegistroAtivo = true
                        },
                        new
                        {
                            Id = 103,
                            DataHoraCriacao = new DateTime(2024, 11, 20, 20, 37, 24, 674, DateTimeKind.Local).AddTicks(6116),
                            Nome = "Impostos",
                            RegistroAtivo = true
                        },
                        new
                        {
                            Id = 104,
                            DataHoraCriacao = new DateTime(2024, 11, 20, 20, 37, 24, 674, DateTimeKind.Local).AddTicks(6118),
                            Nome = "Rendimentos",
                            RegistroAtivo = true
                        },
                        new
                        {
                            Id = 105,
                            DataHoraCriacao = new DateTime(2024, 11, 20, 20, 37, 24, 674, DateTimeKind.Local).AddTicks(6119),
                            Nome = "Serviços",
                            RegistroAtivo = true
                        },
                        new
                        {
                            Id = 106,
                            DataHoraCriacao = new DateTime(2024, 11, 20, 20, 37, 24, 674, DateTimeKind.Local).AddTicks(6127),
                            Nome = "Viagens",
                            RegistroAtivo = true
                        },
                        new
                        {
                            Id = 107,
                            DataHoraCriacao = new DateTime(2024, 11, 20, 20, 37, 24, 674, DateTimeKind.Local).AddTicks(6131),
                            Nome = "Emergências",
                            RegistroAtivo = true
                        },
                        new
                        {
                            Id = 108,
                            DataHoraCriacao = new DateTime(2024, 11, 20, 20, 37, 24, 674, DateTimeKind.Local).AddTicks(6133),
                            Nome = "Alimentação",
                            RegistroAtivo = true
                        },
                        new
                        {
                            Id = 109,
                            DataHoraCriacao = new DateTime(2024, 11, 20, 20, 37, 24, 674, DateTimeKind.Local).AddTicks(6136),
                            Nome = "Jogos",
                            RegistroAtivo = true
                        });
                });

            modelBuilder.Entity("BudgetBuddy.Domain.Entities.Transactions.SubcategoriaTransacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoriaTransacaoId")
                        .HasColumnType("int");

                    b.Property<int?>("CriadoPor")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataHoraCriacao")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("data_hora_criacao")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<bool>("RegistroAtivo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIT")
                        .HasDefaultValue(true)
                        .HasColumnName("registro_ativo");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaTransacaoId");

                    b.ToTable("subcategoria_transacoes", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 100,
                            CategoriaTransacaoId = 100,
                            DataHoraCriacao = new DateTime(2024, 11, 20, 20, 37, 24, 677, DateTimeKind.Local).AddTicks(9876),
                            Nome = "Transporte Público",
                            RegistroAtivo = true
                        },
                        new
                        {
                            Id = 101,
                            CategoriaTransacaoId = 100,
                            DataHoraCriacao = new DateTime(2024, 11, 20, 20, 37, 24, 677, DateTimeKind.Local).AddTicks(9891),
                            Nome = "Combustível",
                            RegistroAtivo = true
                        },
                        new
                        {
                            Id = 102,
                            CategoriaTransacaoId = 100,
                            DataHoraCriacao = new DateTime(2024, 11, 20, 20, 37, 24, 677, DateTimeKind.Local).AddTicks(9893),
                            Nome = "Manutenção do Carro",
                            RegistroAtivo = true
                        },
                        new
                        {
                            Id = 103,
                            CategoriaTransacaoId = 101,
                            DataHoraCriacao = new DateTime(2024, 11, 20, 20, 37, 24, 677, DateTimeKind.Local).AddTicks(9898),
                            Nome = "Plano de Saúde",
                            RegistroAtivo = true
                        },
                        new
                        {
                            Id = 104,
                            CategoriaTransacaoId = 101,
                            DataHoraCriacao = new DateTime(2024, 11, 20, 20, 37, 24, 677, DateTimeKind.Local).AddTicks(9899),
                            Nome = "Medicamentos",
                            RegistroAtivo = true
                        },
                        new
                        {
                            Id = 105,
                            CategoriaTransacaoId = 101,
                            DataHoraCriacao = new DateTime(2024, 11, 20, 20, 37, 24, 677, DateTimeKind.Local).AddTicks(9902),
                            Nome = "Consultas Médicas",
                            RegistroAtivo = true
                        },
                        new
                        {
                            Id = 106,
                            CategoriaTransacaoId = 101,
                            DataHoraCriacao = new DateTime(2024, 11, 20, 20, 37, 24, 677, DateTimeKind.Local).AddTicks(9905),
                            Nome = "Tratamentos Estéticos",
                            RegistroAtivo = true
                        },
                        new
                        {
                            Id = 107,
                            CategoriaTransacaoId = 101,
                            DataHoraCriacao = new DateTime(2024, 11, 20, 20, 37, 24, 677, DateTimeKind.Local).AddTicks(9907),
                            Nome = "Cortes de Cabelo",
                            RegistroAtivo = true
                        },
                        new
                        {
                            Id = 108,
                            CategoriaTransacaoId = 102,
                            DataHoraCriacao = new DateTime(2024, 11, 20, 20, 37, 24, 677, DateTimeKind.Local).AddTicks(9910),
                            Nome = "Tratamentos Laser",
                            RegistroAtivo = true
                        },
                        new
                        {
                            Id = 109,
                            CategoriaTransacaoId = 102,
                            DataHoraCriacao = new DateTime(2024, 11, 20, 20, 37, 24, 677, DateTimeKind.Local).AddTicks(9912),
                            Nome = "Equipamentos de Laser",
                            RegistroAtivo = true
                        },
                        new
                        {
                            Id = 110,
                            CategoriaTransacaoId = 103,
                            DataHoraCriacao = new DateTime(2024, 11, 20, 20, 37, 24, 677, DateTimeKind.Local).AddTicks(9914),
                            Nome = "Impostos Municipais",
                            RegistroAtivo = true
                        },
                        new
                        {
                            Id = 111,
                            CategoriaTransacaoId = 103,
                            DataHoraCriacao = new DateTime(2024, 11, 20, 20, 37, 24, 677, DateTimeKind.Local).AddTicks(9916),
                            Nome = "Impostos Estaduais",
                            RegistroAtivo = true
                        },
                        new
                        {
                            Id = 112,
                            CategoriaTransacaoId = 103,
                            DataHoraCriacao = new DateTime(2024, 11, 20, 20, 37, 24, 677, DateTimeKind.Local).AddTicks(9918),
                            Nome = "Impostos Federais",
                            RegistroAtivo = true
                        },
                        new
                        {
                            Id = 113,
                            CategoriaTransacaoId = 103,
                            DataHoraCriacao = new DateTime(2024, 11, 20, 20, 37, 24, 677, DateTimeKind.Local).AddTicks(9920),
                            Nome = "Impostos sobre Rendimento",
                            RegistroAtivo = true
                        },
                        new
                        {
                            Id = 114,
                            CategoriaTransacaoId = 103,
                            DataHoraCriacao = new DateTime(2024, 11, 20, 20, 37, 24, 677, DateTimeKind.Local).AddTicks(9922),
                            Nome = "Impostos de Propriedade",
                            RegistroAtivo = true
                        },
                        new
                        {
                            Id = 115,
                            CategoriaTransacaoId = 104,
                            DataHoraCriacao = new DateTime(2024, 11, 20, 20, 37, 24, 677, DateTimeKind.Local).AddTicks(9924),
                            Nome = "Investimentos em Ações",
                            RegistroAtivo = true
                        },
                        new
                        {
                            Id = 116,
                            CategoriaTransacaoId = 104,
                            DataHoraCriacao = new DateTime(2024, 11, 20, 20, 37, 24, 677, DateTimeKind.Local).AddTicks(9926),
                            Nome = "Investimentos Imobiliários",
                            RegistroAtivo = true
                        },
                        new
                        {
                            Id = 117,
                            CategoriaTransacaoId = 104,
                            DataHoraCriacao = new DateTime(2024, 11, 20, 20, 37, 24, 677, DateTimeKind.Local).AddTicks(9928),
                            Nome = "Fundos de Rendimento",
                            RegistroAtivo = true
                        },
                        new
                        {
                            Id = 118,
                            CategoriaTransacaoId = 104,
                            DataHoraCriacao = new DateTime(2024, 11, 20, 20, 37, 24, 677, DateTimeKind.Local).AddTicks(9930),
                            Nome = "Rendimentos de Poupança",
                            RegistroAtivo = true
                        },
                        new
                        {
                            Id = 119,
                            CategoriaTransacaoId = 105,
                            DataHoraCriacao = new DateTime(2024, 11, 20, 20, 37, 24, 677, DateTimeKind.Local).AddTicks(9933),
                            Nome = "Serviços Domésticos",
                            RegistroAtivo = true
                        },
                        new
                        {
                            Id = 120,
                            CategoriaTransacaoId = 105,
                            DataHoraCriacao = new DateTime(2024, 11, 20, 20, 37, 24, 677, DateTimeKind.Local).AddTicks(9935),
                            Nome = "Consultoria",
                            RegistroAtivo = true
                        },
                        new
                        {
                            Id = 121,
                            CategoriaTransacaoId = 105,
                            DataHoraCriacao = new DateTime(2024, 11, 20, 20, 37, 24, 677, DateTimeKind.Local).AddTicks(9937),
                            Nome = "Assinaturas de Serviços",
                            RegistroAtivo = true
                        },
                        new
                        {
                            Id = 122,
                            CategoriaTransacaoId = 106,
                            DataHoraCriacao = new DateTime(2024, 11, 20, 20, 37, 24, 677, DateTimeKind.Local).AddTicks(9939),
                            Nome = "Viagens a Negócios",
                            RegistroAtivo = true
                        },
                        new
                        {
                            Id = 123,
                            CategoriaTransacaoId = 106,
                            DataHoraCriacao = new DateTime(2024, 11, 20, 20, 37, 24, 677, DateTimeKind.Local).AddTicks(9943),
                            Nome = "Viagens de Lazer",
                            RegistroAtivo = true
                        },
                        new
                        {
                            Id = 124,
                            CategoriaTransacaoId = 106,
                            DataHoraCriacao = new DateTime(2024, 11, 20, 20, 37, 24, 677, DateTimeKind.Local).AddTicks(9945),
                            Nome = "Passagens Aéreas",
                            RegistroAtivo = true
                        },
                        new
                        {
                            Id = 125,
                            CategoriaTransacaoId = 106,
                            DataHoraCriacao = new DateTime(2024, 11, 20, 20, 37, 24, 677, DateTimeKind.Local).AddTicks(9947),
                            Nome = "Hospedagem",
                            RegistroAtivo = true
                        },
                        new
                        {
                            Id = 126,
                            CategoriaTransacaoId = 107,
                            DataHoraCriacao = new DateTime(2024, 11, 20, 20, 37, 24, 677, DateTimeKind.Local).AddTicks(9949),
                            Nome = "Saúde Emergencial",
                            RegistroAtivo = true
                        },
                        new
                        {
                            Id = 127,
                            CategoriaTransacaoId = 107,
                            DataHoraCriacao = new DateTime(2024, 11, 20, 20, 37, 24, 677, DateTimeKind.Local).AddTicks(9951),
                            Nome = "Ambulância",
                            RegistroAtivo = true
                        },
                        new
                        {
                            Id = 128,
                            CategoriaTransacaoId = 107,
                            DataHoraCriacao = new DateTime(2024, 11, 20, 20, 37, 24, 677, DateTimeKind.Local).AddTicks(9956),
                            Nome = "Consultas de Urgência",
                            RegistroAtivo = true
                        },
                        new
                        {
                            Id = 129,
                            CategoriaTransacaoId = 107,
                            DataHoraCriacao = new DateTime(2024, 11, 20, 20, 37, 24, 677, DateTimeKind.Local).AddTicks(9958),
                            Nome = "Alimentos de Emergência",
                            RegistroAtivo = true
                        },
                        new
                        {
                            Id = 130,
                            CategoriaTransacaoId = 108,
                            DataHoraCriacao = new DateTime(2024, 11, 20, 20, 37, 24, 677, DateTimeKind.Local).AddTicks(9961),
                            Nome = "Alimentação no Trabalho",
                            RegistroAtivo = true
                        },
                        new
                        {
                            Id = 131,
                            CategoriaTransacaoId = 108,
                            DataHoraCriacao = new DateTime(2024, 11, 20, 20, 37, 24, 677, DateTimeKind.Local).AddTicks(9965),
                            Nome = "Refeições Rápidas",
                            RegistroAtivo = true
                        },
                        new
                        {
                            Id = 132,
                            CategoriaTransacaoId = 108,
                            DataHoraCriacao = new DateTime(2024, 11, 20, 20, 37, 24, 677, DateTimeKind.Local).AddTicks(9968),
                            Nome = "Mercado",
                            RegistroAtivo = true
                        },
                        new
                        {
                            Id = 133,
                            CategoriaTransacaoId = 108,
                            DataHoraCriacao = new DateTime(2024, 11, 20, 20, 37, 24, 677, DateTimeKind.Local).AddTicks(9970),
                            Nome = "Restaurantes",
                            RegistroAtivo = true
                        },
                        new
                        {
                            Id = 134,
                            CategoriaTransacaoId = 108,
                            DataHoraCriacao = new DateTime(2024, 11, 20, 20, 37, 24, 678, DateTimeKind.Local).AddTicks(27),
                            Nome = "Lanches",
                            RegistroAtivo = true
                        },
                        new
                        {
                            Id = 135,
                            CategoriaTransacaoId = 109,
                            DataHoraCriacao = new DateTime(2024, 11, 20, 20, 37, 24, 678, DateTimeKind.Local).AddTicks(30),
                            Nome = "Jogos Online",
                            RegistroAtivo = true
                        },
                        new
                        {
                            Id = 136,
                            CategoriaTransacaoId = 109,
                            DataHoraCriacao = new DateTime(2024, 11, 20, 20, 37, 24, 678, DateTimeKind.Local).AddTicks(32),
                            Nome = "Jogos de Tabuleiro",
                            RegistroAtivo = true
                        },
                        new
                        {
                            Id = 137,
                            CategoriaTransacaoId = 109,
                            DataHoraCriacao = new DateTime(2024, 11, 20, 20, 37, 24, 678, DateTimeKind.Local).AddTicks(34),
                            Nome = "Cartões de Jogo",
                            RegistroAtivo = true
                        },
                        new
                        {
                            Id = 138,
                            CategoriaTransacaoId = 109,
                            DataHoraCriacao = new DateTime(2024, 11, 20, 20, 37, 24, 678, DateTimeKind.Local).AddTicks(38),
                            Nome = "Acessórios para Jogos",
                            RegistroAtivo = true
                        },
                        new
                        {
                            Id = 139,
                            CategoriaTransacaoId = 109,
                            DataHoraCriacao = new DateTime(2024, 11, 20, 20, 37, 24, 678, DateTimeKind.Local).AddTicks(41),
                            Nome = "Desenvolvimento de Jogos",
                            RegistroAtivo = true
                        });
                });

            modelBuilder.Entity("BudgetBuddy.Domain.Entities.Transactions.Transacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CriadoPor")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataEfetivacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataHoraCriacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataPrevista")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdContaBancaria")
                        .HasColumnType("int");

                    b.Property<int>("IdSubcategoriaTransacao")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("RegistroAtivo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIT")
                        .HasDefaultValue(true)
                        .HasColumnName("registro_ativo");

                    b.Property<bool>("Status")
                        .HasColumnType("BIT");

                    b.Property<int>("TipoTransacao")
                        .HasColumnType("int");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("IdContaBancaria");

                    b.HasIndex("IdSubcategoriaTransacao");

                    b.ToTable("transacoes", (string)null);
                });

            modelBuilder.Entity("BudgetBuddy.Domain.Entities.BankAccounts.ContaBancaria", b =>
                {
                    b.HasOne("BudgetBuddy.Domain.Entities.BankAccounts.CategoriaContaBancaria", null)
                        .WithMany()
                        .HasForeignKey("IdCategoria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BudgetBuddy.Domain.Entities.CreditCards.CartaoCredito", b =>
                {
                    b.HasOne("BudgetBuddy.Domain.Entities.BankAccounts.ContaBancaria", "ContaBancaria")
                        .WithMany()
                        .HasForeignKey("IdContaVinculada")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("ContaBancaria");
                });

            modelBuilder.Entity("BudgetBuddy.Domain.Entities.Transactions.SubcategoriaTransacao", b =>
                {
                    b.HasOne("BudgetBuddy.Domain.Entities.Transactions.CategoriaTransacao", "CategoriaTransacao")
                        .WithMany()
                        .HasForeignKey("CategoriaTransacaoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CategoriaTransacao");
                });

            modelBuilder.Entity("BudgetBuddy.Domain.Entities.Transactions.Transacao", b =>
                {
                    b.HasOne("BudgetBuddy.Domain.Entities.BankAccounts.ContaBancaria", "ContaBancaria")
                        .WithMany()
                        .HasForeignKey("IdContaBancaria")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BudgetBuddy.Domain.Entities.Transactions.SubcategoriaTransacao", "SubcategoriaTransacao")
                        .WithMany()
                        .HasForeignKey("IdSubcategoriaTransacao")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ContaBancaria");

                    b.Navigation("SubcategoriaTransacao");
                });
#pragma warning restore 612, 618
        }
    }
}
